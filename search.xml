<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++语言简介</title>
      <link href="/2023/06/03/CPP-01/"/>
      <url>/2023/06/03/CPP-01/</url>
      
        <content type="html"><![CDATA[<p>C++ (/ˈsiː plʌs plʌs/, pronounced “C plus plus”) is a high-level, general-purpose programming language created by Danish computer scientist Bjarne Stroustrup. First released in 1985 as an extension of the C programming language, it has since expanded significantly over time; modern C++ currently has object-oriented, generic, and functional features, in addition to facilities for low-level memory manipulation. It is almost always implemented as a compiled language, and many vendors provide C++ compilers, including the Free Software Foundation, LLVM, Microsoft, Intel, Embarcadero, Oracle, and IBM.</p><p>C++ was designed with systems programming and embedded, resource-constrained software and large systems in mind, with performance, efficiency, and flexibility of use as its design highlights. C++ has also been found useful in many other contexts, with key strengths being software infrastructure and resource-constrained applications, including desktop applications, video games, servers (e.g. e-commerce, web search, or databases), and performance-critical applications (e.g. telephone switches or space probes).</p><p>C++ is standardized by the International Organization for Standardization (ISO), with the latest standard version ratified and published by ISO in December 2020 as ISO/IEC 14882:2020 (informally known as C++20). The C++ programming language was initially standardized in 1998 as ISO/IEC 14882:1998, which was then amended by the C++03, C++11, C++14, and C++17 standards. The current C++20 standard supersedes these with new features and an enlarged standard library. Before the initial standardization in 1998, C++ was developed by Stroustrup at Bell Labs since 1979 as an extension of the C language; he wanted an efficient and flexible language similar to C that also provided high-level features for program organization. Since 2012, C++ has been on a three-year release schedule with C++23 as the next planned standard.</p>]]></content>
      
      
      <categories>
          
          <category> CPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CPP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言简介</title>
      <link href="/2023/06/03/C-01/"/>
      <url>/2023/06/03/C-01/</url>
      
        <content type="html"><![CDATA[<div class="note default simple"><p>C语言</p></div><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-06-03 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">1.5 -&gt; 2.0</a></p></div></div><div class='timeline-item-content'><ol><li>相比1.5版本,排版更加好看</li><li>2.0 版本删除不必要的字段,内容简洁易懂</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-06-03 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">1.0 -&gt; 1.5</a></p></div></div><div class='timeline-item-content'><p>首次发布</p></div></div></div><p>The C Programming Language (sometimes termed K&amp;R, after its authors’ initials) is a computer programming book written by Brian Kernighan and Dennis Ritchie, the latter of whom originally designed and implemented the C programming language, as well as co-designed the Unix operating system with which development of the language was closely intertwined. The book was central to the development and popularization of C and is still widely read and used today. Because the book was co-authored by the original language designer, and because the first edition of the book served for many years as the de facto standard for the language, the book was regarded by many to be the authoritative reference on C.<br>C was created by Dennis Ritchie at Bell Labs in the early 1970s as an augmented version of Ken Thompson’s B. Another Bell Labs employee, Brian Kernighan, had written the first C tutorial, and he persuaded Ritchie to coauthor a book on the language. Kernighan would write most of the book’s “expository” material, and Ritchie’s reference manual became its appendices.</p><p>The first edition, published February 22, 1978, was the first widely available book on the C programming language. Its version of C is sometimes termed K&amp;R C (after the book’s authors), often to distinguish this early version from the later version of C standardized as ANSI C.</p><p>In April 1988, the second edition of the book was published, updated to cover the changes to the language resulting from the then-new ANSI C standard, particularly with the inclusion of reference material on standard libraries. The second edition of the book (and as of 2022, the most recent) has since been translated into over 20 languages. In 2012, an eBook version of the second edition was published in ePub, Mobi, and PDF formats.</p><p>ANSI C, first standardized in 1989 (as ANSI X3.159-1989), has since undergone several revisions, the most recent of which is ISO/IEC 9899:2018 (also termed C17 or C18), adopted as an ANSI standard in June 2018. However, no new edition of The C Programming Language has been issued to cover the more recent standards.</p><div align=center class="aspect-ratio">    <iframe src="https://player.bilibili.com/player.html?aid=BV1Vm4y1r7jY&&page=1&as_wide=1&high_quality=1&danmaku=0"     scrolling="no"     border="0"     frameborder="no"     framespacing="0"     high_quality=1    danmaku=1     allowfullscreen="true">     </iframe></div>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> C-introduction </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java简介</title>
      <link href="/2023/06/03/Java-01/"/>
      <url>/2023/06/03/Java-01/</url>
      
        <content type="html"><![CDATA[<p>Java is a high-level, class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible. It is a general-purpose programming language intended to let programmers write once, run anywhere (WORA), meaning that compiled Java code can run on all platforms that support Java without the need to recompile. Java applications are typically compiled to bytecode that can run on any Java virtual machine (JVM) regardless of the underlying computer architecture. The syntax of Java is similar to C and C++, but has fewer low-level facilities than either of them. The Java runtime provides dynamic capabilities (such as reflection and runtime code modification) that are typically not available in traditional compiled languages. As of 2019, Java was one of the most popular programming languages in use according to GitHub,[citation not found] particularly for client–server web applications, with a reported 9 million developers.</p><p>Java was originally developed by James Gosling at Sun Microsystems. It was released in May 1995 as a core component of Sun Microsystems’ Java platform. The original and reference implementation Java compilers, virtual machines, and class libraries were originally released by Sun under proprietary licenses. As of May 2007, in compliance with the specifications of the Java Community Process, Sun had relicensed most of its Java technologies under the GPL-2.0-only license. Oracle offers its own HotSpot Java Virtual Machine, however the official reference implementation is the OpenJDK JVM which is free open-source software and used by most developers and is the default JVM for almost all Linux distributions.</p><p>As of March 2023, Java 20 is the latest version, while Java 17, 11 and 8 are the current long-term support (LTS) versions.</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机组成原理简介</title>
      <link href="/2023/06/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-01/"/>
      <url>/2023/06/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86-01/</url>
      
        <content type="html"><![CDATA[<p>计算机系统是当代生活中比较常见的复杂系统之一。随着科技的发展，计算机系统正变得愈加成熟。</p><p>究其本质，计算机系统由硬件和软件两大部分组成。硬件的工作依靠软件的控制，软件的运行依托硬件的支持。两者相互依存，不可分割。</p><p>硬件指的是计算机的实体部分，也就是“看得见，摸得着”的部分，由各类电子元器件以及光、电、机等相关设备组成，包括主机和外设等。</p><p>现在最常见的计算机系统，是1945年编制的冯·诺依曼计算机。我们日常所指的计算机，基本都是冯·诺依曼计算机。读本所介绍的，也是冯·诺依曼计算机。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机组成原理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>JVM面试专项-第一篇</title>
      <link href="/2023/06/03/JVM-01/"/>
      <url>/2023/06/03/JVM-01/</url>
      
        <content type="html"><![CDATA[<div class="note default simple"><p>JAVA虚拟机面试专项</p></div><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2023-06-03 [ 1.0 ]</p></div></div><div class='timeline-item-content'><p>首次发布</p></div></div></div><h1 id="类加载过程"><a href="#类加载过程" class="headerlink" title="类加载过程"></a>类加载过程</h1><p>loadClass的类加载过程：<span class='p blue'>加载</span> &gt;&gt; <span class='p blue'>验证</span> &gt;&gt; <span class='p blue'>准备</span> &gt;&gt; <span class='p blue'>解析</span> &gt;&gt; <span class='p blue'>初始化</span> &gt;&gt; <span class='p blue'>使用</span> &gt;&gt; <span class='p blue'>卸载</span></p><ul><li><span class='p blue'>加载：</span>在硬盘上查找并通过IO读入字节码文件，使用到类时才会加载，例如调用类的 main()方法，new对象等等，在加载阶段会在内存（堆）中生成一个代表这个类的 java.lang.Class对象，在方法区中，其就作为这个类的各种数据的访问渠道</li><li><span class='p blue'>验证：</span>校验字节码文件的正确性</li><li><span class='p blue'>准备：</span>在方法区，给类的静态变量分配内存，并赋予默认值（例如int的默认值为0）</li><li><span class='p blue'>解析：</span>将静态变量的标识名替换为所指地址的引用，该阶段会把一些静态方法(符号引用即静态方法名，比如main()方法，替换为指向数据所存内存的指针或句柄等(直接引用)，这是所谓的静态链接过程(类加载期间完成)，动态链接是在程序运行期间完成的将符号引用替换为直接引用（非静态成员）</li><li><span class='p blue'>初始化：</span>对类的静态变量初始化为指定的值，执行静态代码块</li></ul><blockquote><span class='p left green'>补充=></span><ul><li><strong>类被加载到方法区中后主要包含：</strong><p class='p left'>运行时常量池、类型信息、字段信息、方法信息、类加载器的引用、对应class实例的引用等信息</p></li><li><strong>类加载器的引用：</strong><p class='p left'>这个类到类加载器实例的引用</p></li><li><strong>对应class实例的引用：</strong><p class='p left'>类加载器在加载类信息放到方法区中后，会创建一个对应的Class 类型的对象实例放到堆(Heap)中</p></li><li><p class='p left'>主类在运行过程中若引用其它类，会逐步加载这些类。jar或war包里的类不是一次性全部加载，是使用到时才加载</p></li></ul></blockquote><hr><h1 id="双亲委派机制"><a href="#双亲委派机制" class="headerlink" title="双亲委派机制"></a>双亲委派机制</h1><div class="note info simple"><p>不同的类，由不同的类加载器加载，那么类加载器如何识别他们要加载的类呢？</p></div><p><img src="/blog-img/1664935417961.png" style="zoom:80%;" /></p><ul><li>加载任何一个类时，会首先由<span class='p blue'>应用程序类加载器</span>接收，然后委托给它的父类-<span class='p blue'>扩展类加载器</span>，扩展类加载器又委托给它的父类-<span class='p blue'>引导类加载器</span></li><li><span class='p blue'>引导类加载器</span>也不会直接加载类，而是检查此类是否是自己的管辖范围内，是则加载，否则依次向下（向其子类）委托，当最底层子类的管辖范围也不包括子类时，则报类找不到异常</li><li><p>类是由哪个类加载器负责，主要看包名。如果伪造一个系统自带的类(即类名相同)，默认由<span class='p blue'>引导类加载器</span>加载该类，虽然我们写的时候希望是由<span class='p blue'>应用程序类加载器</span>加载</p></li><li><span class='p red'>双亲委派优点：</span><p><strong>1.沙箱安全，保护系统类不被篡改</strong><br><strong>2.防止重复加载，保障类只加载一次</strong></p></li></ul><blockquote><p>可以通过自定义类加载器，实现自己的加载逻辑，从而打破双亲委派机制</p></blockquote><hr><h1 id="JVM整体结构-amp-内存模型"><a href="#JVM整体结构-amp-内存模型" class="headerlink" title="JVM整体结构&amp;内存模型"></a>JVM整体结构&amp;内存模型</h1><p><img src="/blog-img/1664942443945.png" style="zoom:85%;" /></p><ul><li>运行时数据区中包含五个内容，分别是：<span class='p blue'>堆</span>、<span class='p blue'>方法区</span>、<span class='p blue'>栈</span>、<span class='p blue'>本地方法栈</span>、<span class='p blue'>程序计数器</span>。其中后面三个是每个线程各自独带一份，而堆和方法区是所有线程共享的，由此会有线程并发安全问题，但是栈、本地方法栈和程序计数器没有线程并发安全问题。</li><li>栈帧中的方法出口，其实是一种记录，记录自己从哪来，把数据返回给谁。</li><li>栈帧中的局部变量表中，第一个局部变量就是此方法的<span class='p red'>this</span>（永远占据第一个局部变量位置），然后再是自定义的变量</li></ul><blockquote><p>每一个栈帧都包含<span class='p blue'>局部变量表</span>、<span class='p blue'>操作数栈</span>、<span class='p blue'>动态链接</span>、<span class='p blue'>方法出口</span></p></blockquote><hr><h1 id="堆区（heap）"><a href="#堆区（heap）" class="headerlink" title="堆区（heap）"></a>堆区（heap）</h1><p><img src="/blog-img/heap-01.jpg" style="zoom:80%;" /><br><strong>堆区划分：</strong></p><ul><li>堆区分为年轻代与老年代，它们的内存比例是1:2。</li><li>年轻代又分为Eden和两个幸存区，比例为8:2。两个幸存区同一时间只允许一个发生作用</li></ul><span class='p blue'>第一种进入老年代的方式：</span><ul><li>现在假设内存比例是800:200，对象创建时是在Eden区，若创建的对象内存是805，超过了Eden区的范围，此时会触发minor GC垃圾回收，假如750被回收掉，剩下的50会进入幸存区，Eden区的750直接清空</li><li>下一次创建对象内存为800，再一次触发minor GC，假设这次Eden区中被回收掉780，剩下20。原先留在幸存区的50也会触发minor GC，50中有30被回收，20 + 20 = 40，这40就会放入另一个幸存区</li><li>以此类推，每一次触发minor GC就记录一次年龄，年龄达到15，直接放到老年代。当年轻代的对象源源不断创建，持续向老年代放入内存，老年代达到内存上限，则触发full GC。full GC的回收效率很低，后续优化都是在年轻代中尽可能释放没用的资源，减少full GC次数</li></ul><span class='p blue'>第二种进入老年代的方式：</span><ul><li>可以设置多少内存为大对象，若创建的对象判断为大对象，直接放进老年代</li></ul><span class='p blue'>第三种进入老年代的方式：</span><ul><li>若Eden区回收内容后剩下的内存，比幸存区的内容的50%还大，则触发动态年龄判断机制，直接放入老年代</li></ul><blockquote><p>以上三种方式都会增加老年代的内存占据，若老年代full GC后的内容容量，满足不了年轻代源源不断注入，则会产生OMM (堆溢出)</p></blockquote><hr><h1 id="JVM内存参数设置"><a href="#JVM内存参数设置" class="headerlink" title="JVM内存参数设置"></a>JVM内存参数设置</h1>]]></content>
      
      
      <categories>
          
          <category> JVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JVM </tag>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络简介</title>
      <link href="/2023/06/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-01/"/>
      <url>/2023/06/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C-01/</url>
      
        <content type="html"><![CDATA[<p>计算机网络（英语：computer network），通常也简称网络，是指容许节点分享资源的数字电信网络:1-3。在电脑网络，电脑设备会透过节点之间的连接（数据链路）互相交换数据，即收发（接收和发放）网络信息。传输介质可分为有线及无线两类——有线的可用到双绞线、光纤电缆等介质；无线则可用到Wi-Fi、NFC和Bluetooth等。</p><p>用于创建、路由及终止数据传输的电脑网络设备即为网络节点。节点包括像个人电脑、电话、服务器般的主机及其他网络硬件（如网关及路由器）。它们一般以网络地址作标识符。当一个设备能够与另一设备交换信息时，便可视它们俩已连接成网络，不论它们是否直连。专用通信协议在大多数分层中位于其他更通用的通信协议之上。要维持网络的可靠性，便需要有一定的网络管理技能。</p><p>电脑网络为海量应用程序及服务背后的基础。比如存取互联网、数字视频、数字音频；共享打印机；收发电子邮件及即时通信消息:4-p.21-29。电脑网络可依照传输介质、传输协议、 网络大小、拓扑、流量控制机制、创建目的等因素区分。世界上最大的电脑网络为互联网。</p>]]></content>
      
      
      <categories>
          
          <category> 计算机网络 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2023/06/02/2023-6-2-firstpage/"/>
      <url>/2023/06/02/2023-6-2-firstpage/</url>
      
        <content type="html"><![CDATA[<ul><li>初次搭建博客<br>有很多不完善的地方，还行持续改善</li><li>个人Github账号名称<span class='p center logo large'>Ginkgovio</span><span class='p center small'>A Wonderful Name</span></li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>照片墙</title>
      <link href="/Gallery/index.html"/>
      <url>/Gallery/index.html</url>
      
        <content type="html"><![CDATA[<span class='p center logo large'>Pixiv</span><span class='p center small'>A Wonderful Image for Top50</span><div align="center"><iframe src="https://pixiv.mokeyjay.com" style="width:240px; height:380px; border: 0"></iframe></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>bilibili</title>
      <link href="/bangumis/index.html"/>
      <url>/bangumis/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<!-- GitCalendar容器 --><div id="gitZone"></div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[<p><div class="addBtn"><button onclick="leonus.linkCom()"><i class="fa-solid fa-circle-plus"></i>快速申请 (默认样式)</button> <button onclick="leonus.linkCom(&quot;bf&quot;)"><i class="fa-solid fa-circle-plus"></i>快速申请 (Butterfly)</button></div></p><p><link rel="stylesheet" href="/css/kslink.css"></p><script src="/js/kslink.js"></script>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/emoji.js"/>
      <url>/js/emoji.js</url>
      
        <content type="html"><![CDATA[// 如果当前页有评论就执行函数if (document.getElementById('post-comment')) owoBig();// 表情放大function owoBig() {    let flag = 1, // 设置节流阀        owo_time = '', // 设置计时器        m = 3; // 设置放大倍数    // 创建盒子    let div = document.createElement('div'),        body = document.querySelector('body');    // 设置ID    div.id = 'owo-big';    // 插入盒子    body.appendChild(div)    // 构造observer    let observer = new MutationObserver(mutations => {        for (let i = 0; i < mutations.length; i++) {            let dom = mutations[i].addedNodes,                owo_body = '';            if (dom.length == 2 && dom[1].className == 'OwO-body') owo_body = dom[1];                // 如果需要在评论内容中启用此功能请解除下面的注释            // else if (dom.length == 1 && dom[0].className == 'tk-comment') owo_body = dom[0];            else continue;            // 禁用右键（手机端长按会出现右键菜单，为了体验给禁用掉）            if (document.body.clientWidth <= 768) owo_body.addEventListener('contextmenu', e => e.preventDefault());            // 鼠标移入            owo_body.onmouseover = (e) => {                if (flag && e.target.tagName == 'IMG') {                    flag = 0;                    // 移入300毫秒后显示盒子                    owo_time = setTimeout(() => {                        let height = e.path[0].clientHeight * m, // 盒子高                            width = e.path[0].clientWidth * m, // 盒子宽                            left = (e.x - e.offsetX) - (width - e.path[0].clientWidth) / 2, // 盒子与屏幕左边距离                            top = e.y - e.offsetY; // 盒子与屏幕顶部距离                        if ((left + width) > body.clientWidth) left -= ((left + width) - body.clientWidth + 10); // 右边缘检测，防止超出屏幕                        if (left < 0) left = 10; // 左边缘检测，防止超出屏幕                        // 设置盒子样式                        div.style.cssText = `display:flex; height:${height}px; width:${width}px; left:${left}px; top:${top}px;`;                        // 在盒子中插入图片                        div.innerHTML = `<img src="${e.target.src}">`                    }, 300);                }            };            // 鼠标移出隐藏盒子            owo_body.onmouseout = () => { div.style.display = 'none', flag = 1, clearTimeout(owo_time); }        }    })    observer.observe(document.getElementById('post-comment'), { subtree: true, childList: true }) // 监听的 元素 和 配置项}// new Vue({//     data: function () {//         this.$notify({//             title: "索隆提醒你",//             message: "小伙子，扒源记住要遵循GPL协议！",//             position: 'top-left',//             offset: 50,//             showClose: true,//             type: "warning",//             duration: 5000//         });//     }// })]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[:root {    --trans-light: rgba(255, 255, 255, 0.95);    --trans-dark: rgba(25, 25, 25, 0.95);    --border-style: 1px solid rgb(169, 169, 169);    --backdrop-filter: none; /* blur(5px) saturate(150%); 耗性能一般不开*/}/* 页脚与头图透明 */#footer {    background: transparent !important;}#page-header {    background: transparent !important;}/* 白天模式遮罩透明 */#footer::before {    background: transparent !important;}#page-header::before {    background: transparent !important;}/* 夜间模式遮罩透明 */[data-theme="dark"] #footer::before {    background: transparent !important;}[data-theme="dark"] #page-header::before {    background: transparent !important;}/* 小冰分类分类磁铁黑夜模式适配 *//* 一般状态 */[data-theme="dark"] .magnet_link_context {    background: #1e1e1e;    color: antiquewhite;}/* 鼠标悬浮状态 */[data-theme="dark"] .magnet_link_context:hover {    background: #3ecdf1;    color: #f2f2f2;}@font-face {    /* 为载入的字体取名字(随意) */    font-family: 'YS';    /* 字体文件地址(相对或者绝对路径都可以) */    /*        src: local("/font/优设好身体.woff2");        会出现红线报错情况。如果路径对。就不要管他        */    src: url(/font/优设好身体.woff2);    /* 定义加粗样式(加粗多少) */    font-weight: normal;    /* 定义字体样式(斜体/非斜体) */    font-style: normal;    /* 定义显示样式 */    font-display: block;}/* 翻页按钮居中 */#pagination {    width: 100%;    margin: auto;}/*    导航栏魔改    一级菜单居中*/#nav .menus_items {    position: absolute !important;    width: fit-content !important;    left: 50% !important;    transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {    display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(5) .menus_item_child {    left: -78px;}/* 日间模式不生效 */[data-theme="light"] #site-name,[data-theme="light"] #site-title,[data-theme="light"] #site-subtitle,[data-theme="light"] #post-info {    animation: none;}/* 夜间模式生效 */[data-theme="dark"] #site-name,[data-theme="dark"] #site-title {    animation: light_15px 10s linear infinite;}[data-theme="dark"] #site-subtitle {    animation: light_10px 10s linear infinite;}[data-theme="dark"] #post-info {    animation: light_5px 10s linear infinite;}/* 关键帧描述 */@keyframes light_15px {    0% {        text-shadow: #5636ed 0 0 15px;    }    12.5% {        text-shadow: #11ee5e 0 0 15px;    }    25% {        text-shadow: #f14747 0 0 15px;    }    37.5% {        text-shadow: #f1a247 0 0 15px;    }    50% {        text-shadow: #f1ee47 0 0 15px;    }    50% {        text-shadow: #b347f1 0 0 15px;    }    62.5% {        text-shadow: #002afa 0 0 15px;    }    75% {        text-shadow: #ed709b 0 0 15px;    }    87.5% {        text-shadow: #39c5bb 0 0 15px;    }    100% {        text-shadow: #5636ed 0 0 15px;    }}@keyframes light_10px {    0% {        text-shadow: #5636ed 0 0 10px;    }    12.5% {        text-shadow: #11ee5e 0 0 10px;    }    25% {        text-shadow: #f14747 0 0 10px;    }    37.5% {        text-shadow: #f1a247 0 0 10px;    }    50% {        text-shadow: #f1ee47 0 0 10px;    }    50% {        text-shadow: #b347f1 0 0 10px;    }    62.5% {        text-shadow: #002afa 0 0 10px;    }    75% {        text-shadow: #ed709b 0 0 10px;    }    87.5% {        text-shadow: #39c5bb 0 0 10px;    }    100% {        text-shadow: #5636ed 0 0 10px;    }}@keyframes light_5px {    0% {        text-shadow: #5636ed 0 0 5px;    }    12.5% {        text-shadow: #11ee5e 0 0 5px;    }    25% {        text-shadow: #f14747 0 0 5px;    }    37.5% {        text-shadow: #f1a247 0 0 15px;    }    50% {        text-shadow: #f1ee47 0 0 5px;    }    50% {        text-shadow: #b347f1 0 0 5px;    }    62.5% {        text-shadow: #002afa 0 0 5px;    }    75% {        text-shadow: #ed709b 0 0 5px;    }    87.5% {        text-shadow: #39c5bb 0 0 5px;    }    100% {        text-shadow: #5636ed 0 0 5px;    }}/*    与universe.js文件对应，    背景宇宙星光*/#universe{    display: block;    position: fixed;    margin: 0;    padding: 0;    border: 0;    outline: 0;    left: 0;    top: 0;    width: 100%;    height: 100%;    pointer-events: none;    /* 这个是调置顶的优先级的，-1在文章页下面，背景上面，个人推荐这种 */    z-index: -1;}/* 侧边栏个人信息卡片动态渐变色 */#aside-content > .card-widget.card-info {    background: linear-gradient(            -45deg,            #e8d8b9,            #eccec5,            #a3e9eb,            #bdbdf0,            #eec1ea    );    box-shadow: 0 0 5px rgb(66, 68, 68);    position: relative;    background-size: 400% 400%;    -webkit-animation: Gradient 10s ease infinite;    -moz-animation: Gradient 10s ease infinite;    animation: Gradient 10s ease infinite !important;}@-webkit-keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}@-moz-keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}@keyframes Gradient {    0% {        background-position: 0% 50%;    }    50% {        background-position: 100% 50%;    }    100% {        background-position: 0% 50%;    }}/* 黑夜模式适配 */[data-theme="dark"] #aside-content > .card-widget.card-info {    background: #191919ee;}/* 个人信息Follow me按钮 */#aside-content > .card-widget.card-info > #card-info-btn {    background-color: #3eb8be;    border-radius: 8px;}/* 鼠标样式 */#cursor {    position: fixed;    width: 16px;    height: 16px;    /* 这里改变跟随的底色 */    background: rgb(57, 197, 187);    border-radius: 8px;    opacity: 0.25;    z-index: 10086;    pointer-events: none;    transition: 0.2s ease-in-out;    transition-property: background, opacity, transform;}#cursor.hidden {    opacity: 0;}#cursor.hover {    opacity: 0.1;    transform: scale(2.5);    -webkit-transform: scale(2.5);    -moz-transform: scale(2.5);    -ms-transform: scale(2.5);    -o-transform: scale(2.5);}#cursor.active {    opacity: 0.5;    transform: scale(0.5);    -webkit-transform: scale(0.5);    -moz-transform: scale(0.5);    -ms-transform: scale(0.5);    -o-transform: scale(0.5);}/* 页面样式调节 *//* 首页文章卡片 */#recent-posts > .recent-post-item {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border-radius: 25px;    border: var(--border-style);}/* 首页侧栏卡片 */#aside-content .card-widget {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border-radius: 18px;    border: var(--border-style);}/* 文章页、归档页、普通页面 */div#post,div#page,div#archive {    background: var(--trans-light);    backdrop-filter: var(--backdrop-filter);    border: var(--border-style);    border-radius: 20px;}/* 导航栏 */#page-header.nav-fixed #nav {    background: rgba(255, 255, 255, 0.75);    backdrop-filter: var(--backdrop-filter);}[data-theme="dark"] #page-header.nav-fixed #nav {    background: rgba(0, 0, 0, 0.7) !important;}/* 夜间模式遮罩 */[data-theme="dark"] #recent-posts > .recent-post-item,[data-theme="dark"] #aside-content .card-widget,[data-theme="dark"] div#post,[data-theme="dark"] div#archive,[data-theme="dark"] div#page {    background: var(--trans-dark);}/* 夜间模式页脚页头遮罩透明 */[data-theme="dark"] #footer::before {    background: transparent !important;}[data-theme="dark"] #page-header::before {    background: transparent !important;}/* 阅读模式 */.read-mode #aside-content .card-widget {    background: rgba(158, 204, 171, 0.5) !important;}.read-mode div#post {    background: rgba(158, 204, 171, 0.5) !important;}/* 夜间模式下的阅读模式 */[data-theme="dark"] .read-mode #aside-content .card-widget {    background: rgba(25, 25, 25, 0.9) !important;    color: #ffffff;}[data-theme="dark"] .read-mode div#post {    background: rgba(25, 25, 25, 0.9) !important;    color: #ffffff;}/*哔哩哔哩视频适配*/.aspect-ratio {    position: relative;    width: 90%;    height: auto;    padding-bottom: 75%;    margin: 3% auto;    text-align: center;}.aspect-ratio iframe {    position: absolute;    width: 100%;    height: 86%;    left: 0;    top: 0;}/* 评论区表情放大 */#owo-big {    position: fixed;    align-items: center;    background-color: rgb(255, 255, 255);    border: 1px #aaa solid;    border-radius: 10px;    z-index: 9999;    display: none;    transform: translate(0, -105%);    overflow: hidden;    animation: owoIn 0.3s cubic-bezier(0.42, 0, 0.3, 1.11);}[data-theme=dark] #owo-big {    background-color: #4a4a4a}#owo-big img {    width: 100%;}/* 动画效果代码由 Heo：https://blog.zhheo.com/ 提供 */@keyframes owoIn {    0% {        transform: translate(0, -95%);        opacity: 0;    }    100% {        transform: translate(0, -105%);        opacity: 1;    }}/* 评论提醒 *//* 设置文字内容 :nth-child(1)的作用是选择第几个 */.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(1):before {    content: '输入QQ号会自动获取昵称和头像🐧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(2):before {    content: '收到回复将会发送到您的邮箱📧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(3):before {    content: '可以通过昵称访问您的网站🔗';}/* 当用户点击输入框时显示 */.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::before,.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::after {    display: block;}/* 主内容区 */.el-input.el-input--small.el-input-group.el-input-group--prepend::before {    /* 先隐藏起来 */    display: none;    /* 绝对定位 */    position: absolute;    /* 向上移动60像素 */    top: -60px;    /* 文字强制不换行，防止left:50%导致的文字换行 */    white-space: nowrap;    /* 圆角 */    border-radius: 10px;    /* 距离左边50% */    left: 50%;    /* 然后再向左边挪动自身的一半，即可实现居中 */    transform: translate(-50%);    /* 填充 */    padding: 14px 18px;    background: #444;    color: #fff;}/* 小角标 */.el-input.el-input--small.el-input-group.el-input-group--prepend::after {    display: none;    content: '';    position: absolute;    /* 内容大小（宽高）为0且边框大小不为0的情况下，每一条边（4个边）都是一个三角形，组成一个正方形。    我们先将所有边框透明，再给其中的一条边添加颜色就可以实现小三角图标 */    border: 12px solid transparent;    border-top-color: #444;    left: 50%;    transform: translate(-50%, -48px);}/* 添加友链按钮 *//* 快速填写格式 */.addBtn {    display: flex;    justify-content: center;    flex-wrap: wrap;}.addBtn button {    transition: .2s;    display: flex;    margin: 5px auto;    color: var(--global-bg);    padding: 15px;    border-radius: 40px;    background: var(--search-result-title);    align-items: center;}button {    padding: 0;    outline: 0;    border: none;    background: 0 0;    cursor: pointer;    touch-action: manipulation;}.fa-solid, .fas {    font-family: "Font Awesome 6 Free";    font-weight: 900;}.addBtn i {    font-size: 1.3rem;    margin-right: 10px;}.addBtn button:hover {    background: var(--theme-color);    color: #fff;}/* 右键菜单 */#rightMenu {    display: none;    position: fixed;    width: 160px;    height: fit-content;    top: 10%;    left: 10%;    /* 菜单面板背景色 */    background-color: var(--card-bg);    /* 菜单面板文字颜色 */    border: 1px solid var(--font-color);    border-radius: 8px;    z-index: 100;}#rightMenu .rightMenu-group {    padding: 7px 6px;}#rightMenu .rightMenu-group:not(:nth-last-child(1)) {    border-bottom: 1px solid var(--font-color);}#rightMenu .rightMenu-group.rightMenu-small {    display: flex;    justify-content: space-between;}#rightMenu .rightMenu-group .rightMenu-item {    height: 30px;    line-height: 30px;    border-radius: 8px;    transition: 0.3s;    color: var(--font-color);}#rightMenu .rightMenu-group.rightMenu-line .rightMenu-item {    display: flex;    height: 40px;    line-height: 40px;    padding: 0 4px;}#rightMenu .rightMenu-group .rightMenu-item:hover {    /* 鼠标悬浮选项颜色 */    background-color: var(--text-bg-hover);}#rightMenu .rightMenu-group .rightMenu-item i {    display: inline-block;    text-align: center;    line-height: 30px;    width: 30px;    height: 30px;    padding: 0 5px;}#rightMenu .rightMenu-group .rightMenu-item span {    line-height: 30px;}#rightMenu .rightMenu-group.rightMenu-line .rightMenu-item * {    height: 40px;    line-height: 40px;}.rightMenu-group.hide {    display: none;}/* 个人卡片头像状态 */.card-info-avatar .author-status-box {    position: absolute;    bottom: 0;    left: calc(100% - 28px);    width: 28px;    height: 28px;    border: 1px solid #d0d7de;    border-radius: 2em;    background-color: #f8f8f8f8;    transition: 0.4s;    overflow: hidden;}[data-theme="dark"] .card-info-avatar .author-status-box {    background-color: #222222f2;    border: 1px solid #5c6060;}.card-info-avatar .author-status-box .author-status {    display: flex;    align-items: center;    justify-content: center;    height: 28px;    padding: 0 5px;}.card-info-avatar .author-status-box:hover {    width: 105px;}.card-info-avatar .author-status-box:hover .author-status span {    width: 105px;    margin-left: 4px;}.card-info-avatar .author-status-box .author-status span {    width: 0;    font-size: 12px;    height: 100%;    overflow: hidden;    text-overflow: ellipsis;    white-space: nowrap;    transition: 0.4s;}.card-widget .card-info-avatar {    display: inline-block;    position: relative;}/* 鼠标放在个人信息卡片，信息卡片彩带 */.author_top:hover {    background: url(https://tuchuang.voooe.cn/images/2023/01/02/snow.gif);    background-size: cover;}/* 头像呼吸灯 */[data-theme="light"] .avatar-img {    animation: huxi_light 4s ease-in-out infinite;}[data-theme="dark"] .avatar-img {    animation: huxi_dark 4s ease-in-out infinite;}@keyframes huxi_light {    0% {        box-shadow: 0px 0px 1px 1px #e9f5fa;    }    50% {        box-shadow: 0px 0px 5px 5px #e9f5fa;    }    100% {        box-shadow: 0px 0px 1px 1px #e9f5fa;    }}@keyframes huxi_dark {    0% {        box-shadow: 0px 0px 1px 1px #39c5bb;    }    50% {        box-shadow: 0px 0px 5px 5px #39c5bb;    }    100% {        box-shadow: 0px 0px 1px 1px #39c5bb;    }}/* 页面滚动条样式 */::-webkit-scrollbar {    width: 8px;    height: 8px;}::-webkit-scrollbar-track {    background-color: rgba(73, 177, 245, 0.2);    border-radius: 2em;}::-webkit-scrollbar-thumb {    background-color: var(--theme-color);    background-image: -webkit-linear-gradient(            45deg,            rgba(255, 255, 255, 0.4) 25%,            transparent 25%,            transparent 50%,            rgba(255, 255, 255, 0.4) 50%,            rgba(255, 255, 255, 0.4) 75%,            transparent 75%,            transparent    );    border-radius: 2em;}::-webkit-scrollbar-corner {    background-color: transparent;}::-moz-selection {    color: #fff;    background-color: var(--theme-color);}/* 右键菜单 */#rightMenu {    display: none;    position: fixed;    width: 160px;    height: fit-content;    top: 10%;    left: 10%;    /* 菜单面板背景色 */    background-color: var(--card-bg);    /* 菜单面板文字颜色 */    border: 1px solid var(--font-color);    border-radius: 8px;    z-index: 100;}#rightMenu .rightMenu-group {    padding: 7px 6px;}#rightMenu .rightMenu-group:not(:nth-last-child(1)) {    border-bottom: 1px solid var(--font-color);}#rightMenu .rightMenu-group.rightMenu-small {    display: flex;    justify-content: space-between;}#rightMenu .rightMenu-group .rightMenu-item {    height: 30px;    line-height: 30px;    border-radius: 8px;    transition: 0.3s;    color: var(--font-color);}#rightMenu .rightMenu-group.rightMenu-line .rightMenu-item {    display: flex;    height: 40px;    line-height: 40px;    padding: 0 4px;}#rightMenu .rightMenu-group .rightMenu-item:hover {    /* 鼠标悬浮选项颜色 */    background-color: var(--text-bg-hover);}#rightMenu .rightMenu-group .rightMenu-item i {    display: inline-block;    text-align: center;    line-height: 30px;    width: 30px;    height: 30px;    padding: 0 5px;}#rightMenu .rightMenu-group .rightMenu-item span {    line-height: 30px;}#rightMenu .rightMenu-group.rightMenu-line .rightMenu-item * {    height: 40px;    line-height: 40px;}.rightMenu-group.hide {    display: none;}/* 音乐播放器 */#eoMusic-page {    margin-top: -60px;}#eoMusic-page #eo-music {    display: flex;    flex-direction: row-reverse;    background: rgba(0, 0, 0, 0);    border: none;    box-shadow: none;}.bgCls {    filter: blur(63px);    opacity: 0.6;    background-repeat: no-repeat;    background-size: cover;}/* 信息 */#eo-music .aplayer-body {    width: 40%;    height: 75vh;}#eo-music .aplayer-pic {    float: none;    width: 180px;    height: 180px;    border-radius: 12px;    margin: auto;    left: 0;    right: 0;}#eo-music .aplayer-info {    margin: 0 20px 0 20px;    border-bottom: none;}#eo-music .aplayer-info .aplayer-music{    text-align: center;    height: auto;    margin: 15px;}#eo-music .aplayer-info .aplayer-music .aplayer-title, #eo-music .aplayer-info .aplayer-music .aplayer-author{    font-size: 2rem;    font-weight: bold;    color: #fff;}#eo-music .aplayer-info .aplayer-lrc{    height: calc(100vh - 660px);    margin-top: 80px;    -webkit-mask-image: linear-gradient(to bottom,#000,#000,#000,#000,#000,#000,#000,#000,#000,#000,#0000,#0000);}#eo-music .aplayer-info .aplayer-lrc p{    font-size: 14px;    color: #fff;}#eo-music .aplayer-info .aplayer-controller{    position: fixed;    max-width: 1500px;    margin: auto;    left: 0px;    right: 0px;    bottom: 50px;}#eo-music .aplayer-info .aplayer-controller .aplayer-bar-wrap {    margin: 0 160px 0px 150px;}#eo-music .aplayer-info .aplayer-controller .aplayer-thumb {    -webkit-transform: none;    transform: none;    background: #fff !important;}#eo-music .aplayer-info .aplayer-controller .aplayer-played {    background: #fff !important;}/* 控制器 */#eo-music .aplayer-info .aplayer-time .aplayer-icon-back, #eo-music .aplayer-info .aplayer-time .aplayer-icon-play, #eo-music .aplayer-info .aplayer-time .aplayer-icon-forward {    display: inline;    position: fixed;}#eo-music .aplayer-info .aplayer-time .aplayer-icon-menu {    display: none;}#eo-music .aplayer-info .aplayer-time {    position: absolute;    width: 100%;    bottom: 21px;    height: 0px;    display: flex;    justify-content: flex-end;}#eo-music .aplayer-info .aplayer-time .aplayer-volume-wrap .aplayer-volume-bar-wrap {    bottom: 5px;    margin: auto;    left: 8px;    right: 0;}#eo-music .aplayer-info .aplayer-time .aplayer-time-inner {    margin-right: 18px;    margin-top: -8px;}#eo-music .aplayer-info .aplayer-time .aplayer-icon {    width: 2rem;    height: 2rem;    margin-left: 15px;}#eo-music .aplayer-info .aplayer-time .aplayer-icon-back {    position: absolute;    left: 0;}#eo-music .aplayer-info .aplayer-time .aplayer-icon-play {    position: absolute;    left: 40px;}#eo-music .aplayer-info .aplayer-time .aplayer-icon-forward {    position: absolute;    left: 80px;}#eo-music .aplayer-info .aplayer-time .aplayer-icon path {    fill: #fff;    opacity: .8;}#eo-music .aplayer-info .aplayer-time .aplayer-icon path:hover {    fill: #fff;    opacity: 1;}/* 歌曲列表 */#eo-music .aplayer-list {    width: 60%;    max-height: none !important;    height: 100%;}#eo-music ol {    max-height: 75vh !important;    /* height: 100%; */    padding-right: 25px;}#eo-music ol::-webkit-scrollbar-thumb {    background: rgb(0 0 0 / 20%);}#eo-music ol>li {    border-top: 1px solid rgb(233 233 233 / 0%);    font-size: 14px;}#eo-music ol>li span {    color: #fff;}#eo-music ol>li.aplayer-list-light {    background: rgb(255 255 255 / 20%);    border-radius: 6px;}#eo-music ol>li:hover {    background: rgb(255 255 255 / 20%);    border-radius: 6px;}#eo-music ol>li.aplayer-list-light .aplayer-list-cur {    display: none;}#eo-music ol>li span.aplayer-list-author {    opacity: .6;}/* **** 移动端样式 ***** */@media screen and (max-width: 768px) {    /* 歌曲列表 */    #eo-music .aplayer-list {        position: fixed;        z-index: 1002;        width: 100%;        bottom: -76%;        left: 0;        background: var(--sidebar-bg);        height: auto;        border-radius: 15px 15px 0px 0px;        padding: 15px 0px;    }    #eo-music .aplayer-list.aplayer-list-hide {        bottom: 0% !important;    }    #eo-music ol {        max-height: 60vh !important;        padding-right: 0px;    }    #eo-music ol>li {        display: flex;        margin: 0 10px;    }    #eo-music ol>li span {        color: var(--font-color);    }    #eo-music ol>li span.aplayer-list-title {        width: 30%;    }    #eo-music ol>li.aplayer-list-light {        background: #33a673;        padding: 5px 20px;        border-radius: 10px;    }    #eo-music ol>li.aplayer-list-light span {        color: #fff;    }    #eo-music ol>li span.aplayer-list-title{        max-width: 55%;        width: auto;        display: -webkit-box;        -webkit-line-clamp: 1;        overflow: hidden;        -webkit-box-orient: vertical;    }    #eo-music ol>li span.aplayer-list-author {        position: absolute;        right: 10px;        width: auto;        max-width: 35%;        display: -webkit-box;        -webkit-line-clamp: 1;        overflow: hidden;        -webkit-box-orient: vertical;    }    #eo-music ol>li.aplayer-list-light span.aplayer-list-author {        right: 15px;    }    /* 歌词信息 */    #eo-music .aplayer-body {        width: 100%;        position: fixed;        margin: auto;        left: 0;        right: 0;        top: 100px;        /* height: auto; */    }    #eo-music .aplayer-info .aplayer-lrc {        margin-top: 40px;        /* height: 400%; */        height: auto;        max-height: 200%;        min-height: 100%;        -webkit-mask-image: linear-gradient(to bottom,#000,#000,#000,#000,#0000,#0000);    }    #eo-music .aplayer-info .aplayer-lrc p.aplayer-lrc-current {        color: #33a673;    }    /* 控制按键和进度条 */    #eo-music .aplayer-info .aplayer-controller {        bottom: 100px;    }    #eo-music .aplayer-info .aplayer-controller .aplayer-bar-wrap {        margin: 0 30px;    }    #eo-music .aplayer-info .aplayer-time {        bottom: -40px;    }    #eo-music .aplayer-info .aplayer-time .aplayer-time-inner {        position: absolute;        width: 100%;        margin-right: 0;        margin-top: -33px;    }    #eo-music .aplayer-info .aplayer-time .aplayer-time-inner .aplayer-dtime {        position: absolute;        right: 30px;    }    #eo-music .aplayer-info .aplayer-time .aplayer-time-inner .aplayer-ptime {        position: absolute;        left: 35px;    }    #eo-music .aplayer-info .aplayer-time .aplayer-icon-back {        margin: auto;        right: 110px;    }    #eo-music .aplayer-info .aplayer-time .aplayer-icon-play {        margin: auto;        right: 0;        left: 0;    }    #eo-music .aplayer-info .aplayer-time .aplayer-icon-forward {        margin: auto;        left: 110px;        right: 0;    }    #eo-music .aplayer-info .aplayer-time .aplayer-icon-order {        position: absolute;        left: 22px;    }    #eo-music .aplayer-info .aplayer-time .aplayer-icon-loop {        position: absolute;        right: 25px;    }    #eo-music .aplayer-info .aplayer-time .aplayer-icon-menu {        display: inline;        position: absolute;        right: 25px;        top: -90px;    }}/* swiper改动 */@media screen and (min-width: 700px) {    .blog-slider {        height: 300px !important;    }    .blog-slider__img {        width: 50% !important;        height: 105% !important;        border-radius: 45px !important;    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cursor.js"/>
      <url>/js/cursor.js</url>
      
        <content type="html"><![CDATA[// 防抖全局计时器let TT = null;    //time用来控制事件的触发// 防抖函数:fn->逻辑 time->防抖时间function debounce(fn, time) {    if (TT !== null) clearTimeout(TT);    TT = setTimeout(fn, time);}// 复制提醒document.addEventListener("copy", function () {    debounce(function () {        new Vue({            data: function () {                this.$notify({                    title: "copy成功🔍",                    message: "若要转载最好保留原文链接哦，银桑亲你一口",                    position: 'top-left',                    offset: 50,                    showClose: true,                    type: "success",                    duration: 5000                });            }        })    }, 300);})var CURSOR;Math.lerp = (a, b, n) => (1 - n) * a + n * b;const getStyle = (el, attr) => {    try {        return window.getComputedStyle            ? window.getComputedStyle(el)[attr]            : el.currentStyle[attr];    } catch (e) {}    return "";};class Cursor {    constructor() {        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    move(left, top) {        this.cursor.style["left"] = `${left}px`;        this.cursor.style["top"] = `${top}px`;    }    create() {        if (!this.cursor) {            this.cursor = document.createElement("div");            this.cursor.id = "cursor";            this.cursor.classList.add("hidden");            document.body.append(this.cursor);        }        var el = document.getElementsByTagName('*');        for (let i = 0; i < el.length; i++)            if (getStyle(el[i], "cursor") == "pointer")                this.pt.push(el[i].outerHTML);        document.body.appendChild((this.scr = document.createElement("style")));        // 这里改变鼠标指针的颜色 由svg生成        this.scr.innerHTML = `* {cursor: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8' width='8px' height='8px'><circle cx='4' cy='4' r='4' opacity='1.0' fill='rgb(57, 197, 187)'/></svg>") 4 4, auto}`;    }    refresh() {        this.scr.remove();        this.cursor.classList.remove("hover");        this.cursor.classList.remove("active");        this.pos = {curr: null, prev: null};        this.pt = [];        this.create();        this.init();        this.render();    }    init() {        document.onmouseover  = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.add("hover");        document.onmouseout   = e => this.pt.includes(e.target.outerHTML) && this.cursor.classList.remove("hover");        document.onmousemove  = e => {(this.pos.curr == null) && this.move(e.clientX - 8, e.clientY - 8); this.pos.curr = {x: e.clientX - 8, y: e.clientY - 8}; this.cursor.classList.remove("hidden");};        document.onmouseenter = e => this.cursor.classList.remove("hidden");        document.onmouseleave = e => this.cursor.classList.add("hidden");        document.onmousedown  = e => this.cursor.classList.add("active");        document.onmouseup    = e => this.cursor.classList.remove("active");    }    render() {        if (this.pos.prev) {            this.pos.prev.x = Math.lerp(this.pos.prev.x, this.pos.curr.x, 0.15);            this.pos.prev.y = Math.lerp(this.pos.prev.y, this.pos.curr.y, 0.15);            this.move(this.pos.prev.x, this.pos.prev.y);        } else {            this.pos.prev = this.pos.curr;        }        requestAnimationFrame(() => this.render());    }}(() => {    CURSOR = new Cursor();    // 需要重新获取列表时，使用 CURSOR.refresh()})();new Vue({    data: function () {        this.$notify({            title: "索隆提醒你",            message: "小伙子，扒内容记住要遵循GPL协议！",            position: 'top-left',            offset: 50,            showClose: true,            type: "warning",            duration: 5000        });    }})]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/kslink.js"/>
      <url>/js/kslink.js</url>
      
        <content type="html"><![CDATA[var leonus = {    linkCom: e => {        var t = document.querySelector(".el-textarea__inner");        "bf" == e ? (t.value = "```yml\n", t.value += "- name: \n  link: \n  avatar: \n  descr: \n  siteshot: ", t.value += "\n```", t.setSelectionRange(15, 15)) : (t.value = "站点名称：\n站点地址：\n头像链接：\n站点描述：\n站点截图：", t.setSelectionRange(5, 5)), t.focus()    },    owoBig: () => {        if (!document.getElementById("post-comment") || document.body.clientWidth < 768) return;        let e = 1,            t = "",            o = document.createElement("div"),            n = document.querySelector("body");        o.id = "owo-big", n.appendChild(o), new MutationObserver((l => {            for (let a = 0; a < l.length; a++) {                let i = l[a].addedNodes,                    s = "";                if (2 == i.length && "OwO-body" == i[1].className) s = i[1];                else {                    if (1 != i.length || "tk-comment" != i[0].className) continue;                    s = i[0]                }                s.onmouseover = l => {                    e && ("OwO-body" == s.className && "IMG" == l.target.tagName || "tk-owo-emotion" == l.target.className) && (e = 0, t = setTimeout((() => {                        let e = 3 * l.path[0].clientHeight,                            t = 3 * l.path[0].clientWidth,                            a = l.x - l.offsetX - (t - l.path[0].clientWidth) / 2,                            i = l.y - l.offsetY;                        a + t > n.clientWidth && (a -= a + t - n.clientWidth + 10), a < 0 && (a = 10), o.style.cssText = `display:flex; height:${e}px; width:${t}px; left:${a}px; top:${i}px;`, o.innerHTML = `<img src="${l.target.src}">`                    }), 300))                }, s.onmouseout = () => {                    o.style.display = "none", e = 1, clearTimeout(t)                }            }        })).observe(document.getElementById("post-comment"), {            subtree: !0,            childList: !0        })    },};// new Vue({//     data: function () {//         this.$notify({//             title: "索隆提醒你",//             message: "小伙子，扒源记住要遵循GPL协议！",//             position: 'top-left',//             offset: 50,//             showClose: true,//             type: "warning",//             duration: 5000//         });//     }// })]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/music.js"/>
      <url>/js/music.js</url>
      
        <content type="html"><![CDATA[var urlinfo = window.location.pathname;var overtime;qq_musicpage();function qq_musicpage() {    if (urlinfo != '/music/') {        document.querySelector("#web_bg").classList.remove("bgCls");        document.getElementById('web_bg').style.backgroundImage = 'none';        document.getElementById('footer').style.display = 'flex';        document.getElementsByClassName('pace-running')[0].style.background = 'var(--global-bg)';        document.getElementsByTagName('body')[0].style.background = 'var(--global-bg)';        clearInterval(overtime);    }else {        document.querySelector("#web_bg").classList.add("bgCls");        document.getElementById('footer').style.display = 'none';        document.getElementById('content-inner').style.background = 'none';        document.getElementById('page').style.margin = 'auto';        document.getElementById('page').style.background = 'rgba(0,0,0,0)';        document.getElementsByTagName('body')[0].style.background = '#0d0d0d';        overtime = window.setInterval('setOverTime()', '500');    }    document.body.onmousedown = function(event) {        if (event.button == 0) {            var targ = event.target;            var tname = targ.tagName;            var tClassname = targ.classList[1];            var tidname = targ.id;            if (urlinfo == '/music/'){                if (tname == 'svg') {                    var tsvg = targ.parentNode;                    if(tsvg.classList[1] == 'aplayer-icon-menu' || tClassname == 'aplayer-icon-menu') {                        setTimeout(function() {                            document.getElementById('menu-mask').style.display = "block";                            document.getElementById('menu-mask').style.animation = "0.5s ease 0s 1 normal none running to_show";                        }, 100);                    }                }else if (tname == 'path') {                    var tpath = targ.parentNode;                    var tpath2 = tpath.parentNode;                    if(tpath2.classList[1] == 'aplayer-icon-menu') {                        setTimeout(function() {                            document.getElementById('menu-mask').style.display = "block";                            document.getElementById('menu-mask').style.animation = "0.5s ease 0s 1 normal none running to_show";                        }, 100);                    }                }                if (tidname == 'menu-mask') {                    var domHtml = domAplyerList();                    domHtml.classList.remove("aplayer-list-hide");                }            }        }    }}function domAplyerList() {    var htmldom = document.getElementById('eo-music');    var htmldom2 = htmldom.childNodes[3];    return htmldom2;}function setOverTime() {    imgs = document.getElementById('eo-music').getElementsByClassName('aplayer-pic')[0].style.backgroundImage;    document.getElementById('web_bg').style.backgroundImage = imgs;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/randomPost.js"/>
      <url>/js/randomPost.js</url>
      
        <content type="html"><![CDATA[// 发现有时会和当前页面重复，加一个判断function randomPost() {    fetch('/baidusitemap.xml').then(res => res.text()).then(str => (new window.DOMParser()).parseFromString(str, "text/xml")).then(data => {        let ls = data.querySelectorAll('url loc');        while (true) {            let url = ls[Math.floor(Math.random() * ls.length)].innerHTML;            if (location.href == url) continue;            location.href = url;            return;        }    })}// 阅读文章时看了一遍写的代码，发现加个数组和一个遍历完全没必要，改成下面这个即可。// function randomPost() {//     fetch('/baidusitemap.xml').then(res => res.text()).then(str => (new window.DOMParser()).parseFromString(str, "text/xml")).then(data => {//         let ls = data.querySelectorAll('url loc');//         location.href = ls[Math.floor(Math.random() * ls.length)].innerHTML//     })// }]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/readPercent.js"/>
      <url>/js/readPercent.js</url>
      
        <content type="html"><![CDATA[window.onscroll = percent;// 执行函数// 页面百分比function percent() {    let a = document.documentElement.scrollTop || window.pageYOffset, // 卷去高度        b = Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - document.documentElement.clientHeight, // 整个网页高度        result = Math.round(a / b * 100), // 计算百分比        up = document.querySelector("#go-up") // 获取按钮    if (result <= 95) {        up.childNodes[0].style.display = 'none'        up.childNodes[1].style.display = 'block'        up.childNodes[1].innerHTML = result;    } else {        up.childNodes[1].style.display = 'none'        up.childNodes[0].style.display = 'block'    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/rightmenu.js"/>
      <url>/js/rightmenu.js</url>
      
        <content type="html"><![CDATA[function setMask() {    //设置遮罩    if (document.getElementsByClassName("rmMask")[0] != undefined)        return document.getElementsByClassName("rmMask")[0];    mask = document.createElement('div');    mask.className = "rmMask";    mask.style.width = window.innerWidth + 'px';    mask.style.height = window.innerHeight + 'px';    mask.style.background = '#fff';    mask.style.opacity = '.0';    mask.style.position = 'fixed';    mask.style.top = '0';    mask.style.left = '0';    mask.style.zIndex = 998;    document.body.appendChild(mask);    document.getElementById("rightMenu").style.zIndex = 19198;    return mask;}function insertAtCursor(myField, myValue) {    //IE 浏览器    if (document.selection) {        myField.focus();        sel = document.selection.createRange();        sel.text = myValue;        sel.select();    }    //FireFox、Chrome等    else if (myField.selectionStart || myField.selectionStart == '0') {        var startPos = myField.selectionStart;        var endPos = myField.selectionEnd;        // 保存滚动条        var restoreTop = myField.scrollTop;        myField.value = myField.value.substring(0, startPos) + myValue + myField.value.substring(endPos, myField.value.length);        if (restoreTop > 0) {            myField.scrollTop = restoreTop;        }        myField.focus();        myField.selectionStart = startPos + myValue.length;        myField.selectionEnd = startPos + myValue.length;    } else {        myField.value += myValue;        myField.focus();    }}let rmf = {};rmf.showRightMenu = function (isTrue, x = 0, y = 0) {    let $rightMenu = $('#rightMenu');    $rightMenu.css('top', x + 'px').css('left', y + 'px');    if (isTrue) {        $rightMenu.show();    } else {        $rightMenu.hide();    }}rmf.copyWordsLink = function () {    let url = window.location.href    let txa = document.createElement("textarea");    txa.value = url;    document.body.appendChild(txa)    txa.select();    document.execCommand("Copy");    document.body.removeChild(txa);}rmf.switchReadMode = function () {    const $body = document.body    $body.classList.add('read-mode')    const newEle = document.createElement('button')    newEle.type = 'button'    newEle.className = 'fas fa-sign-out-alt exit-readmode'    $body.appendChild(newEle)    function clickFn() {        $body.classList.remove('read-mode')        newEle.remove()        newEle.removeEventListener('click', clickFn)    }    newEle.addEventListener('click', clickFn)}//复制选中文字rmf.copySelect = function () {    document.execCommand('Copy', false, null);}//回到顶部rmf.scrollToTop = function () {    document.getElementsByClassName("menus_items")[1].setAttribute("style", "");    document.getElementById("name-container").setAttribute("style", "display:none");    btf.scrollToDest(0, 500);}document.body.addEventListener('touchmove', function () {}, { passive: false });function popupMenu() {    window.oncontextmenu = function (event) {        // if (event.ctrlKey) return true;        // 当关掉自定义右键时候直接返回        if (mouseMode == "off") return true;        $('.rightMenu-group.hide').hide();        if (document.getSelection().toString()) {            $('#menu-text').show();        }        if (document.getElementById('post')) {            $('#menu-post').show();        } else {            if (document.getElementById('page')) {                $('#menu-post').show();            }        }        var el = window.document.body;        el = event.target;        var a = /^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\*\+,;=.]+$/        if (a.test(window.getSelection().toString()) && el.tagName != "A") {            $('#menu-too').show()        }        if (el.tagName == 'A') {            $('#menu-to').show()            rmf.open = function () {                if (el.href.indexOf("http://") == -1 && el.href.indexOf("https://") == -1 || el.href.indexOf("yisous.xyz") != -1) {                    pjax.loadUrl(el.href)                }                else {                    location.href = el.href                }            }            rmf.openWithNewTab = function () {                window.open(el.href);                // window.location.reload();            }            rmf.copyLink = function () {                let url = el.href                let txa = document.createElement("textarea");                txa.value = url;                document.body.appendChild(txa)                txa.select();                document.execCommand("Copy");                document.body.removeChild(txa);            }        } else if (el.tagName == 'IMG') {            $('#menu-img').show()            rmf.openWithNewTab = function () {                window.open(el.src);                // window.location.reload();            }            rmf.click = function () {                el.click()            }            rmf.copyLink = function () {                let url = el.src                let txa = document.createElement("textarea");                txa.value = url;                document.body.appendChild(txa)                txa.select();                document.execCommand("Copy");                document.body.removeChild(txa);            }            rmf.saveAs = function () {                var a = document.createElement('a');                var url = el.src;                var filename = url.split("/")[-1];                a.href = url;                a.download = filename;                a.click();                window.URL.revokeObjectURL(url);            }        } else if (el.tagName == "TEXTAREA" || el.tagName == "INPUT") {            $('#menu-paste').show();            rmf.paste = function () {                navigator.permissions                    .query({                        name: 'clipboard-read'                    })                    .then(result => {                        if (result.state == 'granted' || result.state == 'prompt') {                            //读取剪贴板                            navigator.clipboard.readText().then(text => {                                console.log(text)                                insertAtCursor(el, text)                            })                        } else {                            Snackbar.show({                                text: '请允许读取剪贴板！',                                pos: 'top-center',                                showAction: false,                            })                        }                    })            }        }        let pageX = event.clientX + 10;        let pageY = event.clientY;        let rmWidth = $('#rightMenu').width();        let rmHeight = $('#rightMenu').height();        if (pageX + rmWidth > window.innerWidth) {            pageX -= rmWidth + 10;        }        if (pageY + rmHeight > window.innerHeight) {            pageY -= pageY + rmHeight - window.innerHeight;        }        mask = setMask();        // 滚动消失的代码和阅读进度有冲突，因此放到readPercent.js里面了        $(".rightMenu-item").click(() => {            $('.rmMask').attr('style', 'display: none');        })        $(window).resize(() => {            rmf.showRightMenu(false);            $('.rmMask').attr('style', 'display: none');        })        mask.onclick = () => {            $('.rmMask').attr('style', 'display: none');        }        rmf.showRightMenu(true, pageY, pageX);        $('.rmMask').attr('style', 'display: flex');        return false;    };    window.addEventListener('click', function () {        rmf.showRightMenu(false);    });}if (!(navigator.userAgent.match(/(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i))) {    popupMenu()}const box = document.documentElementfunction addLongtabListener(target, callback) {    let timer = 0 // 初始化timer    target.ontouchstart = () => {        timer = 0 // 重置timer        timer = setTimeout(() => {            callback();            timer = 0        }, 380) // 超时器能成功执行，说明是长按    }    target.ontouchmove = () => {        clearTimeout(timer) // 如果来到这里，说明是滑动        timer = 0    }    target.ontouchend = () => { // 到这里如果timer有值，说明此触摸时间不足380ms，是点击        if (timer) {            clearTimeout(timer)        }    }}addLongtabListener(box, popupMenu)// 全屏rmf.fullScreen = function () {    if (document.fullscreenElement) document.exitFullscreen();    else document.documentElement.requestFullscreen();}// 右键开关if (localStorage.getItem("mouse") == undefined) {    localStorage.setItem("mouse", "on");}var mouseMode = localStorage.getItem("mouse");function changeMouseMode() {    if (localStorage.getItem("mouse") == "on") {        mouseMode = "off";        localStorage.setItem("mouse", "off");        debounce(function () {            new Vue({                data: function () {                    this.$notify({                        title: "切换右键模式成功🍔",                        message: "当前鼠标右键已恢复为系统默认！",                        position: 'top-left',                        offset: 50,                        showClose: true,                        type: "success",                        duration: 5000                    });                }            })        }, 300);    } else {        mouseMode = "on";        localStorage.setItem("mouse", "on");        debounce(function () {            new Vue({                data: function () {                    this.$notify({                        title: "切换右键模式成功🍔",                        message: "当前鼠标右键已更换为网站指定样式！",                        position: 'top-left',                        offset: 50,                        showClose: true,                        type: "success",                        duration: 5000                    });                }            })        }, 300);    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime.js"/>
      <url>/js/runtime.js</url>
      
        <content type="html"><![CDATA[var now=new Date;function createtime(){now.setTime(now.getTime()+1e3);    var e=new Date("06/01/2023 00:00:00"),t=Math.trunc(234e8+(now-e)/1e3*17),a=(t/1496e5).toFixed(6),o=new Date("06/01/2023 00:00:00"),n=(now-o)/1e3/60/60/24,r=Math.floor(n),i=(now-o)/1e3/60/60-24*r,s=Math.floor(i);1==String(s).length&&(s="0"+s);    var d=(now-o)/1e3/60-1440*r-60*s,l=Math.floor(d);1==String(l).length&&(l="0"+l);    var g=(now-o)/1e3-86400*r-3600*s-60*l,b=Math.round(g);1==String(b).length&&(b="0"+b);    let c="";c=s<18&&s>=9?`<img class='boardsign' src='https://img.shields.io/badge/%E6%98%9F%E9%99%85%E7%89%9B%E4%BB%94-%E6%91%86%E7%83%82%E4%B8%AD-ff69b4' title='阿姆斯特朗闪光回旋炮!'><br> <div style="font-size:13px;font-weight:bold">小破站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 事物的历史由其本身写就，事物的诞生就开始了对自己历史的书写 🚀</div>`:`<img class='boardsign' src='https://img.shields.io/badge/%E6%98%9F%E9%99%85%E7%89%9B%E4%BB%94-%E4%B8%8D%E6%91%86%E7%83%82-brightgreen' title='阿姆斯特朗闪光回旋炮!'><br> <div style="font-size:13px;font-weight:bold">小破站居然运行了 ${r} 天 ${s} 小时 ${l} 分 ${b} 秒 <i id="heartbeat" class='fas fa-heartbeat'></i> <br> 事物的历史由其本身写就，事物的诞生就开始了对自己历史的书写 🚀</div>`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=c)}setInterval((()=>{createtime()}),1e3);]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/universe.js"/>
      <url>/js/universe.js</url>
      
        <content type="html"><![CDATA[function dark() {window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame;var n,e,i,h,t=.05,s=document.getElementById("universe"),o=!0,a="180,184,240",r="226,225,142",d="226,225,224",c=[];function f(){n=window.innerWidth,e=window.innerHeight,i=.216*n,s.setAttribute("width",n),s.setAttribute("height",e)}function u(){h.clearRect(0,0,n,e);for(var t=c.length,i=0;i<t;i++){var s=c[i];s.move(),s.fadeIn(),s.fadeOut(),s.draw()}}function y(){this.reset=function(){this.giant=m(3),this.comet=!this.giant&&!o&&m(10),this.x=l(0,n-10),this.y=l(0,e),this.r=l(1.1,2.6),this.dx=l(t,6*t)+(this.comet+1-1)*t*l(50,120)+2*t,this.dy=-l(t,6*t)-(this.comet+1-1)*t*l(50,120),this.fadingOut=null,this.fadingIn=!0,this.opacity=0,this.opacityTresh=l(.2,1-.4*(this.comet+1-1)),this.do=l(5e-4,.002)+.001*(this.comet+1-1)},this.fadeIn=function(){this.fadingIn&&(this.fadingIn=!(this.opacity>this.opacityTresh),this.opacity+=this.do)},this.fadeOut=function(){this.fadingOut&&(this.fadingOut=!(this.opacity<0),this.opacity-=this.do/2,(this.x>n||this.y<0)&&(this.fadingOut=!1,this.reset()))},this.draw=function(){if(h.beginPath(),this.giant)h.fillStyle="rgba("+a+","+this.opacity+")",h.arc(this.x,this.y,2,0,2*Math.PI,!1);else if(this.comet){h.fillStyle="rgba("+d+","+this.opacity+")",h.arc(this.x,this.y,1.5,0,2*Math.PI,!1);for(var t=0;t<30;t++)h.fillStyle="rgba("+d+","+(this.opacity-this.opacity/20*t)+")",h.rect(this.x-this.dx/4*t,this.y-this.dy/4*t-2,2,2),h.fill()}else h.fillStyle="rgba("+r+","+this.opacity+")",h.rect(this.x,this.y,this.r,this.r);h.closePath(),h.fill()},this.move=function(){this.x+=this.dx,this.y+=this.dy,!1===this.fadingOut&&this.reset(),(this.x>n-n/4||this.y<0)&&(this.fadingOut=!0)},setTimeout(function(){o=!1},50)}function m(t){return Math.floor(1e3*Math.random())+1<10*t}function l(t,i){return Math.random()*(i-t)+t}f(),window.addEventListener("resize",f,!1),function(){h=s.getContext("2d");for(var t=0;t<i;t++)c[t]=new y,c[t].reset();u()}(),function t(){document.getElementsByTagName('html')[0].getAttribute('data-theme')=='dark'&&u(),window.requestAnimationFrame(t)}()};dark()]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/share.js"/>
      <url>/js/share.js</url>
      
        <content type="html"><![CDATA[// 分享本页function share_() {    let url = window.location.origin + window.location.pathname    try {        // 截取标题        var title = document.title;        var subTitle = title.endsWith("| Ginkgovio🎧") ? title.substring(0, title.length - 14) : title;        navigator.clipboard.writeText('Ginkgovio🎧的站内分享\n标题：' + subTitle + '\n链接：' + url + '\n欢迎来访！🍭🍭🍭');        new Vue({            data: function () {                this.$notify({                    title: "成功复制信息🎉",                    message: "如果没复制成功那是人问题...",                    position: 'top-left',                    offset: 50,                    showClose: true,                    type: "success",                    duration: 5000                });                // return { visible: false }            }        })    } catch (err) {        console.error('复制失败！', err);    }    // new ClipboardJS(".share", { text: function () { return '标题：' + document.title + '\n链接：' + url } });    // btf.snackbarShow("本页链接已复制到剪切板，快去分享吧~")}// 防抖function share() {    debounce(share_, 300);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>番剧</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[<p>没有边听音乐边学习的习惯</p>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
